name: Test & Coverage

permissions:
  pull-requests: write
  contents: read

on:
  push:
    branches: [main]
    paths:
      - "**/*.ts"
      - "**/*.spec.ts"
      - "pnpm-lock.yaml"

  pull_request:
    branches: [main]
    paths:
      - "**/*.ts"
      - "**/*.spec.ts"
      - "pnpm-lock.yaml"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: âœ… Checkout
        uses: actions/checkout@v3

      - name: Enable Corepack and Set Pnpm Version
        run: |
          npm install -g corepack@latest
          corepack enable

      - name: Setup Node.js 20.x for pnpm
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: ğŸ§ª Run tests
        run: pnpm run test

      - name: ğŸ“Š Generate test coverage
        run: pnpm run ci

      - name: ğŸ“¤ Save coverage from PR
        id: pr_coverage
        run: |
          COVERAGE=$(node .scripts/get-summary.js)
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: ğŸ“¥ Checkout main to get base coverage
        run: |
          git fetch origin main
          git checkout origin/main -- coverage/coverage-final.json

      - name: ğŸ“¤ Save coverage from main
        id: base_coverage
        run: |
          COVERAGE=$(node .scripts/get-summary.js)
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: ğŸ’¬ Post coverage change to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const prCoverage = parseFloat('${{ steps.pr_coverage.outputs.coverage }}');
            const baseCoverage = parseFloat('${{ steps.base_coverage.outputs.coverage }}');
            const delta = (prCoverage - baseCoverage).toFixed(2);

            let comment = '## Coverage Change\n\n This Comment is auto generated by GitHub Actions.\n\n';

            if (prCoverage === baseCoverage && baseCoverage === 100) {
              comment += `ğŸŸ¢ **Test coverage unchanged**: ${prCoverage}%`;
            } else {
              if (delta > 0) {
                comment += `ğŸŸ¢ **Test coverage increased**: ${prCoverage}% (+${delta}%)`;
              } else if (delta < 0) {
                comment += `ğŸ”´ **Test coverage decreased**: ${prCoverage}% (${delta}%)`;
              } else {
                comment += `ğŸŸ¡ **Test coverage unchanged**: ${prCoverage}%`;
              }
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
